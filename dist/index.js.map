{
  "version": 3,
  "sources": ["../index.js"],
  "sourcesContent": ["// Fully working Version.\n$(document).ready(function(){\n\n  // Add comma to input field\n    $('#income').keyup(function(event) {\n\n    // Skip for arrow keys controller\n    if(event.which >= 37 && event.which <= 40) return;\n\n    // Format number input to show commas and prefix \u00A3\n    $(this).val(function(index, value) {\n      return \"\u00A3\" + value\n      .replace(/\\D/g, \"\")\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n      ;\n    });\n  });\n\n\n$('#monthly-saving').attr({\n       \"max\" : 150,        // Max number input val in monthly\n       \"min\" : 10          // Min number input val in monthly\n    });\n\n// On click of calculate button\n$(\"#dmGo\").click(function(){\n\n  // Get user inputs from form fields\n    let savingPeriod = $(\"input[name='period']:checked\").val();\n    let monthlySaving =  Number($('#monthly-saving').val());\n    let dmValue = monthlySaving * 2;\n\n    let getIncome =  $(\"#income\").val().split(\",\").join(\"\");\n    let totalIncome = getIncome.replace(/\\D/g, '');\n\n    let incomeMin = 12570;\n\n  if($('#monthly-saving').val()<10 || $('#monthly-saving').val()>150 ){\n      $('#savingError').show();\n      $('#result').hide();\n\n    }\n    else{\n      $('#savingError').hide();\n      $('#result').show();\n    }\n\n    \n    if(totalIncome < incomeMin){\n      $('#incomeMin').show();\n\n  }\n \n      else{\n        $('#incomeMin').hide();\n        $('#result').show();\n      }\n\n\n\n  //Tax Bands\n  let eng0 = 0;\n  let eng1 = 32;\n  let eng2 = 42;\n  let eng3 = 47;\n\n  let scot0 = 0;\n  let scot1 = 32;\n  let scot2 = 32;\n  let scot3 = 33;\n  let scot4 = 53;\n  let scot5 = 43;\n  let scot6 = 48;\n\n  // If England selected as \n  if (savingPeriod == \"eng\") {\n\n    if (totalIncome > 150000){\n      taxCalc = monthlySaving*(1 - (eng3 / 100));\n    }\n\n    else if (totalIncome > 50270 && totalIncome <= 150000) {\n      taxCalc = monthlySaving*(1 - (eng2 / 100));\n    }\n\n    else if (totalIncome > 12570 && totalIncome <= 50270) {\n      taxCalc = monthlySaving*(1 - (eng1 / 100));\n    }\n\n    else if (totalIncome <= 12570) {\n      taxCalc = monthlySaving;\n    }\n\n    else {\n      taxCalc = \"Error\";\n    }\n\n  }\n\n  else if (savingPeriod == \"scot\") {\n\n    if (totalIncome > 150000){\n      taxCalc = monthlySaving*(1 - (scot6 / 100));\n    }\n\n    else if (totalIncome > 50270 && totalIncome <= 150000) {\n      taxCalc = monthlySaving*(1 - (scot5 / 100));\n    }\n\n    else if (totalIncome > 43662 && totalIncome <= 50270) {\n      taxCalc = monthlySaving*(1 - (scot4 / 100));\n    }\n\n    else if (totalIncome > 25688 && totalIncome <= 43662) {\n      taxCalc = monthlySaving*(1 - (scot3 / 100));\n    }\n\n    else if (totalIncome > 14732 && totalIncome <= 25688) {\n      taxCalc = monthlySaving*(1 - (scot2 / 100));\n    }\n\n    else if (totalIncome > 12570 && totalIncome <= 14732) {\n      taxCalc = monthlySaving*(1 - (scot1 / 100));\n    }\n\n    else if (totalIncome <= 12570) {\n      taxCalc = monthlySaving;\n    }\n\n    else {\n      taxCalc = \"Error\";\n    }\n\n  }\n\n    let taxCalcRnd = Math.round(taxCalc * 100) / 100;\n\n  // update shares1\n  $('#dmShareCost').text(formatNumber(taxCalcRnd));\n  // update share value\n  $('#dmShareValue').text(formatNumber(dmValue));\n});\n\nfunction formatNumber(num){\n  return new Intl.NumberFormat().format(num);\n}\n});"],
  "mappings": "MACA,EAAE,QAAQ,EAAE,MAAM,UAAU,CAGxB,EAAE,SAAS,EAAE,MAAM,SAASA,EAAO,CAGhCA,EAAM,OAAS,IAAMA,EAAM,OAAS,IAGvC,EAAE,IAAI,EAAE,IAAI,SAASC,EAAOC,EAAO,CACjC,MAAO,OAAMA,EACZ,QAAQ,MAAO,EAAE,EACjB,QAAQ,wBAAyB,GAAG,CAEvC,CAAC,CACH,CAAC,EAGH,EAAE,iBAAiB,EAAE,KAAK,CACnB,IAAQ,IACR,IAAQ,EACX,CAAC,EAGL,EAAE,OAAO,EAAE,MAAM,UAAU,CAGvB,IAAIC,EAAe,EAAE,8BAA8B,EAAE,IAAI,EACrDC,EAAiB,OAAO,EAAE,iBAAiB,EAAE,IAAI,CAAC,EAClDC,EAAUD,EAAgB,EAG1BE,EADa,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,GAAG,EAAE,KAAK,EAAE,EAC1B,QAAQ,MAAO,EAAE,EAEzCC,EAAY,MAEf,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAM,EAAE,iBAAiB,EAAE,IAAI,EAAE,KAC3D,EAAE,cAAc,EAAE,KAAK,EACvB,EAAE,SAAS,EAAE,KAAK,IAIlB,EAAE,cAAc,EAAE,KAAK,EACvB,EAAE,SAAS,EAAE,KAAK,GAIjBD,EAAcC,EACf,EAAE,YAAY,EAAE,KAAK,GAKnB,EAAE,YAAY,EAAE,KAAK,EACrB,EAAE,SAAS,EAAE,KAAK,GAMxB,IAAIC,EAAO,EACPC,EAAO,GACPC,EAAO,GACPC,EAAO,GAEPC,EAAQ,EACRC,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GAGRf,GAAgB,MAEdG,EAAc,KAChB,QAAUF,GAAe,EAAKO,EAAO,KAG9BL,EAAc,OAASA,GAAe,KAC7C,QAAUF,GAAe,EAAKM,EAAO,KAG9BJ,EAAc,OAASA,GAAe,MAC7C,QAAUF,GAAe,EAAKK,EAAO,KAG9BH,GAAe,MACtB,QAAUF,EAIV,QAAU,QAKLD,GAAgB,SAEnBG,EAAc,KAChB,QAAUF,GAAe,EAAKc,EAAQ,KAG/BZ,EAAc,OAASA,GAAe,KAC7C,QAAUF,GAAe,EAAKa,EAAQ,KAG/BX,EAAc,OAASA,GAAe,MAC7C,QAAUF,GAAe,EAAKY,EAAQ,KAG/BV,EAAc,OAASA,GAAe,MAC7C,QAAUF,GAAe,EAAKW,EAAQ,KAG/BT,EAAc,OAASA,GAAe,MAC7C,QAAUF,GAAe,EAAKU,EAAQ,KAG/BR,EAAc,OAASA,GAAe,MAC7C,QAAUF,GAAe,EAAKS,EAAQ,KAG/BP,GAAe,MACtB,QAAUF,EAIV,QAAU,SAKZ,IAAIe,EAAa,KAAK,MAAM,QAAU,GAAG,EAAI,IAG/C,EAAE,cAAc,EAAE,KAAKC,EAAaD,CAAU,CAAC,EAE/C,EAAE,eAAe,EAAE,KAAKC,EAAaf,CAAO,CAAC,CAC/C,CAAC,EAED,SAASe,EAAaC,EAAI,CACxB,OAAO,IAAI,KAAK,aAAa,EAAE,OAAOA,CAAG,CAC3C,CACA,CAAC",
  "names": ["event", "index", "value", "savingPeriod", "monthlySaving", "dmValue", "totalIncome", "incomeMin", "eng0", "eng1", "eng2", "eng3", "scot0", "scot1", "scot2", "scot3", "scot4", "scot5", "scot6", "taxCalcRnd", "formatNumber", "num"]
}
